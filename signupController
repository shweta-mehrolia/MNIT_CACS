package application;

import java.net.URL;
import java.util.ResourceBundle;
import java.sql.*;
import com.sun.javafx.scene.accessibility.Action;
import javafx.scene.*;
import javafx.scene.control.*;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.input.*;
import javafx.stage.Stage;

public class signupController implements Initializable {

	Connection conn=null;
	ObservableList<String> dept=FXCollections.observableArrayList("Select","Computer Science","Electronics Engineering",
			"Electrical Engineering","Civil Engineering","Mechanical Engineering","Chemical Engineering",
			"Metallurgy and Materials Science","Architecture","Physics","Chemistry","Mathematics","Humanities");
	
	ObservableList<String> soc=FXCollections.observableArrayList("Select","Music Society","Litsoc","Dramatics","NSS","Energy Club",
			"Rotract","Film And Photography","Alcom","Technical Society");
	
	ObservableList<String> yr=FXCollections.observableArrayList("Select","First","Second","Third","Fourth","Fifth","N.A.");
	
	ObservableList<String> ty=FXCollections.observableArrayList("Select","Faculty","Student","Student Co-ordinator");
	@FXML
	private ChoiceBox<String> society;
	@FXML
	private ChoiceBox<String> department;
	@FXML
	private ChoiceBox<String> year;
	@FXML
	private ChoiceBox<String> type;
	@FXML
	private TextField name;
	@FXML
	private TextField email;
	@FXML
	private PasswordField password;
	@FXML
	private PasswordField repassword;
	@FXML 
	private TextField contact1;
	@FXML
	private TextField contact2;
	@FXML
	private Label emailError;
	@FXML
	private Label passError;
	@FXML
	private Label RePassError;
	private Stage dialogStage;
	private Scene scene;
	
	@Override
	public void initialize(URL url,ResourceBundle rb)
	{
		department.setItems(dept);
		department.setValue("Select");
		society.setItems(soc);
		society.setValue("Select");
		year.setItems(yr);
		year.setValue("Select");
		type.setItems(ty);
		type.setValue("Select");
	}
	
	@FXML
	public void signup(MouseEvent event)
	{
		try
		{
			Class.forName("com.mysql.jdbc.Driver");
			conn=DriverManager.getConnection("jdbc:mysql://localhost/dbms?user=root&password=pucchi143");
			String socid="";
			if(email.getText().toString().endsWith("@mnit.ac.in") && password.getText().toString().length()>=5 && password.getText().toString().equals(repassword.getText().toString())){
				PreparedStatement st2=conn.prepareStatement("select socid from society where sname=?");
				st2.setString(1,society.getValue().toString());
				//PrintWriter pw=response.getWriter();
				ResultSet rs2=st2.executeQuery();
				if(rs2.next())
				{
					socid = rs2.getString(1);
				}
			System.out.println("try");
			String em=email.getText().toString();
			String pwd=password.getText().toString();
			System.out.println("connection");
			PreparedStatement st=conn.prepareStatement("insert into users values(?,?,?,?,?,?,?,?,?)");
			st.setString(1,name.getText().toString());
			st.setString(2,em);
			st.setString(3,pwd);
			st.setString(4,socid);
			st.setString(5,department.getValue().toString());
			st.setString(6,year.getValue().toString());
			st.setString(7,contact1.getText().toString());
			st.setString(8,contact2.getText().toString());
			st.setString(9,type.getValue().toString());
			System.out.println(name.getText().toString()+em+pwd+society.getValue().toString()+department.getValue().toString()+year.getValue().toString()+contact1.getText().toString()+contact2.getText().toString()+type.getValue().toString());
			st.executeUpdate();
			System.out.println("value inserted");
			infoBox("Login Successfull",null,"Success" );
            Node node = (Node)event.getSource();
            dialogStage = (Stage) node.getScene().getWindow();
            dialogStage.close();
            scene = new Scene(FXMLLoader.load(getClass().getResource("Welcome.fxml")));
        	dialogStage.setScene(scene);
        	dialogStage.show();
        	conn.close();
			}
			
			else
			{
				if(email.getText().toString().endsWith("@mnit.ac.in")==false)
				{
					email.setText("");
					emailError.setText("email end - mnit.ac.in");
				}
				//	response.sendRedirect("signup.jsp?error1=!! E-Mail ID must end with mnit.ac.in !!");
				else if(password.getText().toString().length()<5)
				{
					emailError.setText("");
					password.setText("");
					repassword.setText("");
					passError.setText("password len > 5");
				}
					//response.sendRedirect("signup.jsp?error2=!! Password should be of atleast 5 characters !!");
				else if(password.getText().toString().equals(repassword.getText().toString())==false)
				{
					passError.setText("");
					emailError.setText("");
					password.setText("");
					repassword.setText("");
					RePassError.setText("passwords don't match");
				}
					//response.sendRedirect("signup.jsp?error3=!! passwords do not  match !!");
				//else if()
				//cn1.close();
				conn.close();
			}
		}
		catch(Exception e)
		{
			e.printStackTrace();
		}
	}

	private void infoBox(String string, Object object, String string2) {
		// TODO Auto-generated method stub
		
	}
}
